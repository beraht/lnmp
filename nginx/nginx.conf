
#user  nobody;  #用户运行
worker_processes  1; #和cpu的核数有关,1核CPU只能处理一个进程, nginx的进程数 master 主进程 worker 工作进程

#error_log  logs/error.log;
#error_log  logs/error.log  notice;   //各种日志
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;  //进行pid的存放位置


events {
    worker_connections  1024;  #每个work进程打开的最大连接数
}

#http公共的配置项,除server外,全是公共的配置项
http {
    include       mime.types; # location对应的后缀和值(如css ,html,png,zip等)
    default_type  application/octet-stream;  #默认文件类型

    #设置日志类型 访问日志
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on; #普通应用为on  下载io的为off
    #tcp_nopush     on; #防止网络阻塞

    #keepalive_timeout  0; #连接超时时间，单位是秒
    keepalive_timeout  65;

    #gzip  on; #开启gzip压缩输出

    server {
        listen       80; #监听端口
        server_name  localhost; #访问域名

        #charset koi8-r; #编码格式，若网页格式与此不同，将被自动转码

        #access_log  logs/host.access.log  main; #虚拟主机访问日志定义

        #对URL进行匹配
        location / {
            root   html; #访问路径，可相对也可绝对路径
            index  index.html index.htm; #首页文件。以下按顺序匹配
        }

        #error_page  404              /404.html;  #错误信息返回页面

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        # 访问URL以.php结尾则自动转交给127.0.0.1
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        # php脚本请求全部转发给FastCGI处理
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        # 禁止访问.ht页面 （需ngx_http_access_module模块）
        #location ~ /\.ht {
        #    deny  all; //禁止后缀为.ht的访问，和apache那权限差不多
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
